# Pendahuluan {.unnumbered}

## File, Directory, Repository, Vault

Di dunia digital kita menghasilkan FILE, yang berisikan entah data biner atau data teks (text). Data teks sebenarnya juga data biner, tetapi dibatasi oleh kode teks seperti ASCII atau UTF-8. File data biner dan teks untuk dibaca mesin, sedangkan data teks biasanya untuk di baca juga oleh manUsia.

Proses yang kita lakukan pada level paling dasar adalah mengubah file input menjadi file output. Atau file versi lama menjadi file versi baru. Sedemikian penting file itu Å›ehingga kita menyimpannya ke dalam sebuah repositori atau "lemari besi" (vault). Hampir selalu ada lebih dari satu files, sehinnga kita memberi nama atau label pada file itu. Nama file adalah data teks, sehungga bisa dibaca manusia. Nama juga digunakan sebagi entry dari daftar isi (directoy). Sebuah directory berisikan pohon dari folders (Map), dan sebuah folder entah berisikan folder lain dan atau file.

\## Github: "Bank Repositori"

Seperti uang yang lebih aman dan berguna disimpan di Bank, repository kita bisa direpliksi di Github, dimana isi repository lokal sama dengan repository master di Guthub. Dalam kondisi yang tidak kita inginkan, komputer kita rusak atau hilang, kita bisa dengan mudah mereplikasi repository kita di komputer yang baru, dengan mrng-clone repositori yang tersimpan di "Bank" Github

## Git Github dan Kwowlegdde Management

Dalam berkreasi menghasilkan tulisan, paper, disertasi, konten, software kita sering menghadapi kebingungan, kelelahan, dan kebuntuan akibat sifat kompleksitas yang tinggi.

Berbagai alat bantu digital telah sangat menolong, tetapi ancaman kompleksitas selalu mengancam. Akibatnya kalaupun tugas ini selesai, kualitas tidak maksimal, waktu terlalu lama, dan biaya yang dikeluarkan membengkak.

Jalan keluarnya adalah dengan menguraikan pekerjaan ke dalam potongan, tahapan, untuk dikrjakan sendiri atau parlelisasi.

Git dan Github alat digital yang sangat berguna untuk mengelola berbagai potongan pekerjaan dan mendistribusinya pada banyak orang, dengan tetap menjaga integritas proyek.

Git mengendalikan pnguraian pekerjaan ke dalam potongan-potongan penugasan, mencatat siapa yang mengambil potongan pekerjaan tertentu, lalu memantau penyelesaiainya. Pekerjaan juga dapat diurai ke dalam versi-versi, sehingga sebelum pengembangan versi baru selesai versi lama tetap tersedia.

Git mengenal tiga tempat penyimpanan: lokal repository, staging, dan working space.

Adapun Github menjadi pusat distribusi, sehingga Github menyimpan repositori utama (master atau main) dan setiap individu kontributor memiliki replikasi dari repositori master, yaitu replikasi lokal.

Sebagaimana diperlihatkan pada Gambar @fig-git-github, Github menjdi pusat dari banyak kontributor dengan repositori lokal masing masing. Git dan Github bekerjasama mengatur potongan mana yang dikerjakan kontributor tertentu, dan mencegah tumpang tindih atau pengerjaan bagian sama pada saat yang sama oleh kntributor yang berbeda.

![Git dan Github](images/gitgithub.png){#fig-git-github}

Dari gambar ini, dapat dimengerti bahwa kontributor bekerja di working space, yang bila hasinya memuaskan, di kirim ke staging area (yang biasanya hidden dari kontrbutor ) untuk menunggu keputusan apakah hendak di commit ke local repository. Untuk proyek personal, proses berhenti cukup di sini

Bila diputuskan untuk untuk masuk ke repository utama, maka proses push diinisiasi, yang biasanya diterima kecuali bisa ada anomali seperti duplikasi kntributor tadi.

Mengingat pentingnya mengkombinasi personalisasi kontribusi (git) dan kolaborasi (Github) maka dipandang perlu akadmisi memanfaatkan alat bantu ini. Untuk itu tulisan ini dibuat.

Proses pembuatan tulisan ini menggunakan Git dan sedikit Github. Tulisan ini dibuat menggunakan texteditor, dengan format markdwon versi Quarto. This is a book created from markdown and executable code.

## Teks, Markdown, Quarto

Pada akhirnya isi file harus di konsumsi pengguna. Ada 3 bentuk pernyajian yang umumnya dituntut orang: web pages (untuk dikonsumsi di komputer), PDF (untuk dibagikan dan dikonsmunsi melalui layar atau printer), atau docx untuk diedit swlanjutnya nenggunakan word processor

Dengan menmbahkan kode-kode marking pada file .txt, dokumen berubah menjaidi .md.  Mungkin tidak banyak yang menyadari bahwa chatGPT memberikan jawaban dalam format .md. 

Kemudian bila ditambahsan atribut yaml, maka file berubah mnjadi .qmd yang dimengertik Quarto.

Tugas utama Quarto adalah merender file teks markdown .qmd menjadi lamanweb, pdf, docs, serta format lainya seperti latex

# obsidian dan Zotero, dan Quarto

Onsidian adalh aplikasi serta paltfoem untuk menghasilak file yang bernialai tinggi. Dalam bentuk paling sederhana kita daoa memilih seatu fold dalam repository untuk di jadikam vaukt (ruang penyimpn harta). Sekali vaultr itu dibuat, obisidian bsai membuat file .md unrtuk membuta f\]konten, seklain itu, file tersebut dapat mengndung btabwk,gambar, persamaan matematika sehingga dapa digunkan untuk menimpan pengethuan yang berharga/

Kualitas file .md dapat ditingkatkan karena Qbisidan memiliki mekaniskme untuk membuat ,ind map (graph yang menbghubungkan isi suatu file dengan isi file lain), sehingga penulis mendapatkan ganmabran relasional yang lebih lengkao.

Dengan sebuah ekstensi (program tambahan) di Obsidian, Obsidian mampu melakukan hal yang sama pad dfile .qmd. File qmd dsaoat mnenggabung kan potongan pengetahuan untk manusia dasn potongna kode software yang daopat dieksekusikomputer dan menayangkan hasdilnya. Quarto merealisasikan konsep literate programming, yang menjadikan penulisan oaoper dan koding dilakuan bersamaabn

See @knuth84 for additional discussion of literate programming.

Bandung, 13 Februari 2025

\>Armein Z R Langi