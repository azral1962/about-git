# Preface {.unnumbered}

Dalam berkreasi menghasilkan tulisan, paper, disertasi, konten, software kita sering menghadapi kebingungan, kelelahan, dan kebuntuan akibat sifat kompleksitas yang tinggi.

Berbagai alat bantu digital telah sangat menolong, tetapi ancaman kompleksitas selalu mengancam. Akibatnya kalaupun tugas ini selesai, kualitas tidak maksimal, waktu terlalu lama, dan biaya yang dikeluarkan membengkak.

Jalan keluarnya adalah dengan menguraikan pekerjaan ke dalam potongan, tahapan, untuk dikrjakan sendiri atau parlelisasi.

Git dan Github alat digital yang sangat berguna untuk mengelola berbagai potongan pekerjaan dan mendistribusinya pada banyak orang, dengan tetap menjaga integritas proyek.

Git mengendalikan pnguraian pekerjaan ke dalam potongan-potongan penugasan, mencatat siapa yang mengambil potongan pekerjaan tertentu, lalu memantau penyelesaiainya. Pekerjaan juga dapat diurai ke dalam versi-versi, sehingga sebelum pengembangan versi baru selesai versi lama tetap tersedia.

Git mengenal tiga tempat penyimpanan: lokal repository, staging, dan working space. 

Adapun Github menjadi pusat distribusi, sehingga Github menyimpan repositori utama (master atau main) dan setiap individu kontributor memiliki replikasi dari repositori master, yaitu replikasi lokal.
 
Sebagaimana diperlihatkan pada Gambar @fig-git-github, Github menjdi pusat dari banyak kontributor dengan repositori lokal masing masing. Git dan Github bekerjasama mengatur potongan mana yang dikerjakan kontributor tertentu, dan mencegah tumpang tindih atau pengerjaan bagian sama pada saat yang sama oleh kntributor yang berbeda.

![Git dan Github](images/gitgithub.png){#fig-git-github}

Dari gambar ini, dapat dimengerti bahwa kontributor bekerja di working space, yang bila hasinya memuaskan, di kirim ke staging area (yang biasanya hidden dari kontrbutor ) untuk menunggu keputusan apakah hendak di commit  ke local repository. Untuk proyek personal, proses berhenti cukup di sini

Bila diputuskan untuk untuk masuk ke repository utama, maka proses push diinisiasi, yang biasanya diterima kecuali bisa ada anomali seperti duplikasi kntributor tadi.

Mengingat pentingnya mengkombinasi personalisasi kontribusi (git) dan kolaborasi (Github) maka dipandang perlu akadmisi memanfaatkan alat bantu ini. Untuk itu tulisan ini dibuat.

Proses pembuatan tulisan ini menggunakan Git dan sedikit Github. Tulisan ini dibuat menggunakan texteditor, dengan format markdwon versi Quarto. 
This is a book created from markdown and executable code.


See @knuth84 for additional discussion of literate programming.

Bandung, 13 Februari 2025
Armein Z R Langi  
